import pandas as pd

def merge_your_csv_files():
    """
    用于合并您自己的CSV文件
    """
    # 请修改为您的实际文件路径
    file_a_path = "A.csv"  # 修改为您的A文件路径
    file_b_path = "B.csv"  # 修改为您的B文件路径
    output_path = "merged_result.csv"  # 输出文件路径
    
    try:
        # 读取文件
        df_a = pd.read_csv(file_a_path)
        df_b = pd.read_csv(file_b_path)
        
        print(f"文件A: {len(df_a)} 行, {len(df_a.columns)} 列")
        print(f"文件B: {len(df_b)} 行, {len(df_b.columns)} 列")
        print(f"文件A的列: {list(df_a.columns)}")
        print(f"文件B的列: {list(df_b.columns)}")
        
        # 自动检测共同列
        common_columns = list(set(df_a.columns) & set(df_b.columns))
        print(f"共同列: {common_columns}")
        
        # 执行left join合并
        result = pd.merge(df_a, df_b, on=common_columns, how='left')
        
        print(f"\n合并结果: {len(result)} 行, {len(result.columns)} 列")
        print(f"合并后的列: {list(result.columns)}")
        
        # 验证行数
        if len(result) == len(df_a):
            print("✓ 成功！合并后行数与文件A一致")
        else:
            print("⚠ 警告：行数不一致")
        
        # 显示前几行
        print("\n前5行数据:")
        print(result.head())
        
        # 保存结果
        result.to_csv(output_path, index=False)
        print(f"\n结果已保存到: {output_path}")
        
        return result
        
    except Exception as e:
        print(f"错误: {e}")
        return None

# 运行您的文件合并
if __name__ == "__main__":
    print("开始合并您的CSV文件...")
    merge_your_csv_files()
